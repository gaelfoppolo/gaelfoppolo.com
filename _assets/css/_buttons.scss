/* == BUTTONS == */

@mixin buttonsAdditions() {

	/* fills width of parent container */
	&--block {
		display: block;
		width: 100%;

		+.btn--block {
			margin-top: 0.25em;
		}
	}

	/* disabled */
	&--disabled {
		pointer-events: none;
		cursor: not-allowed;
		filter: alpha(opacity=35);
		box-shadow: none;
		opacity: 0.35;
	}

	/* extra large button */
	&--x-large {
		font-size: $type-size-4;
	}

	/* large button */
	&--large {
		font-size: $type-size-5;
	}

	/* small button */
	&--small {
		font-size: $type-size-7;
	}
}

@mixin buttonTheme($background-color, $text-color) {
	background-color: $background-color;
	color: $text-color;
	border: 1px solid $text-color;
}


/* Default button */

a.btn,
.btn {
  /* default */
  display: inline-block;
  margin-bottom: 0.25em;
  padding: 0.5em 1em;
  font-size: $type-size-6;
  font-weight: bold;
  text-align: center;
  text-decoration: none;
  border-width: 0;
  border-radius: $border-radius;
  cursor: pointer;

  .icon {
    margin-right: 0.5em;
  }

  .icon + .hidden {
    margin-left: -0.5em; /* override for hidden text*/
  }

  /* button colors */
  $buttoncolors:
  (success, $success-color),
  (warning, $warning-color),
  (danger, $danger-color),
  (info, $info-color),
  (twitter, $twitter-color),
  (linkedin, $linkedin-color);

  @each $buttoncolor, $color in $buttoncolors {
    &--#{$buttoncolor} {
		
		@include buttonTheme($color, yiq-contrasted($color));
		  
		&:hover {
			@include buttonTheme(yiq-contrasted($color), $color);
		}

		&:visited {
		  	@include buttonTheme($color, yiq-contrasted($color));
		}

		@include buttonsAdditions();
      
    }
  }

  /* theme */
  $themebuttons: 
  (inverse, var(--background-color), var(--text-color)),
  (primary, var(--text-color), var(--background-color));

  @each $name, $bg, $txt in $themebuttons {
  	&--#{$name} {

		@include buttonTheme($bg, $txt);

		&:hover {
			@include buttonTheme($txt, $bg);
		}

  		@include buttonsAdditions();

  	}
  }
  
}

